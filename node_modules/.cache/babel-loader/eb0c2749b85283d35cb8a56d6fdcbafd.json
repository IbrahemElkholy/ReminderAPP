{"ast":null,"code":"var _jsxFileName = \"E:\\\\ITI\\\\React js\\\\projets\\\\reminder\\\\src\\\\components\\\\app.js\";\nimport React, { Component } from 'react';\nimport { add_reminder, remove_reminder, clear_reminders } from '../actions';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport logo from './reminder.png';\n\nclass APP extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      text: \"\",\n      date: new Date()\n    };\n\n    this.renderReminder = () => {\n      const reminds = this.props.remiders;\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"list-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }\n      }, reminds.map(reminder => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          className: \"list-group-item\",\n          key: reminder.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 33\n          }\n        }, reminder.text), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 33\n          }\n        }, moment(new Date(reminder.date)).fromNow()), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"remove btn btn-danger\",\n          onClick: () => this.props.remove_reminder(reminder.id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 33\n          }\n        }, \"X\"));\n      }));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"imag\", {\n      src: logo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"reminder-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }, \"What should you do ?\")), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-controle\",\n      type: \"text\",\n      value: this.state.text,\n      placeholder: \" Enter what u think ....!\",\n      onChange: e => this.setState({\n        text: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(DatePicker, {\n      className: \"form-controle\",\n      selected: this.state.date,\n      onChange: date => {\n        this.setState({\n          date: date\n        });\n      },\n      showTimeSelect: true,\n      timeFormat: \"HH:mm\",\n      timeCaption: \"time\",\n      dateFormat: \"MMMM d, yyyy h:mm aa\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary btn-block\",\n      onClick: () => {\n        this.props.add_reminder(this.state.text, this.state.date);\n        this.setState({\n          text: '',\n          date: ''\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, \"Add Reminder\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, this.renderReminder()), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-danger btn-block\",\n      onClick: () => {\n        this.props.clear_reminders();\n        this.setState({\n          text: '',\n          date: ''\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, \"Clear Reminders\"));\n  }\n\n} // function mapDispatchToProps(dispath){\n//     return{\n//         add_reminder:()=>dispath(add_reminder())\n//     }\n// }\n\n\nexport default connect(state => {\n  return {\n    remiders: state\n  };\n}, {\n  add_reminder,\n  remove_reminder,\n  clear_reminders\n})(APP);","map":{"version":3,"sources":["E:/ITI/React js/projets/reminder/src/components/app.js"],"names":["React","Component","add_reminder","remove_reminder","clear_reminders","connect","moment","DatePicker","logo","APP","state","text","date","Date","renderReminder","reminds","props","remiders","map","reminder","id","fromNow","render","e","setState","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { add_reminder, remove_reminder, clear_reminders } from '../actions'\r\nimport { connect } from 'react-redux'\r\nimport moment from 'moment'\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport logo from './reminder.png'\r\nclass APP extends Component {\r\n    state = {\r\n        text: \"\",\r\n        date: new Date()\r\n    }\r\n    renderReminder = () => {\r\n        const reminds = this.props.remiders\r\n        return (\r\n            <ul className=\"list-group\">\r\n                {\r\n                    reminds.map(reminder => {\r\n                        return (\r\n                            <li className=\"list-group-item\" key={reminder.id}>\r\n                                <div>{reminder.text}</div>\r\n                                <div>{moment(new Date(reminder.date)).fromNow()}</div>\r\n                                <div className=\"remove btn btn-danger\" onClick={() => this.props.remove_reminder(reminder.id)}>X</div>\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n            </ul>\r\n        )\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <imag src={logo} />\r\n                <div className=\"reminder-title\">\r\n                    <h2>What should you do ?</h2>\r\n                </div>\r\n                \r\n                    <input\r\n                        className=\"form-controle\"\r\n                        type=\"text\"\r\n                        value={this.state.text}\r\n                        placeholder=\" Enter what u think ....!\"\r\n                        onChange={(e) => this.setState({ text: e.target.value })}\r\n                    />\r\n                \r\n                \r\n                    <DatePicker\r\n                        className=\"form-controle\"\r\n                        selected={this.state.date}\r\n                        onChange={(date) => { this.setState({ date: date }) }}\r\n                        showTimeSelect\r\n                        timeFormat=\"HH:mm\"\r\n                        timeCaption=\"time\"\r\n                        dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n                    />\r\n            \r\n\r\n                <button\r\n                    className=\"btn btn-primary btn-block\"\r\n                    onClick={() => {\r\n                        this.props.add_reminder(this.state.text, this.state.date)\r\n                        this.setState({\r\n                            text: '',\r\n                            date: ''\r\n                        })\r\n                    }}\r\n                >Add Reminder</button>\r\n                <div>{this.renderReminder()}</div>\r\n                <button className=\"btn btn-danger btn-block\" onClick={() => {\r\n                    this.props.clear_reminders()\r\n                    this.setState({\r\n                        text: '',\r\n                        date: ''\r\n                    })\r\n                }}>Clear Reminders</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// function mapDispatchToProps(dispath){\r\n//     return{\r\n//         add_reminder:()=>dispath(add_reminder())\r\n//     }\r\n\r\n// }\r\n\r\nexport default connect(state => {\r\n    return {\r\n        remiders: state\r\n    }\r\n}, { add_reminder, remove_reminder, clear_reminders })(APP)"]},"metadata":{},"sourceType":"module"}